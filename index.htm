<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Emoji:wght@300..700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        :root {
            --background-color: #fff;
            --hint-color: #999;
            --yes-button-background-color: #9c9;
            --no-button-background-color: #c99;
        }
        body {
            font-family: "Roboto", sans-serif;
            font-size: 1em;
            font-weight: normal;
            background-color: var(--background-color);
        }
        .situation-title {
            flex-grow: 1;
            display: flex;
            justify-content: center;
            font-family: "Roboto", sans-serif;
            font-size: 1.5em;
            font-weight: normal;
        }
        .situation-block {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }
        .situation-description {
            display: flex;
            flex-direction: row;
            align-items: center;
        }
        .situation-options {
            display: flex;
            flex-direction: column;
            gap: 6px;
            transition: height 0.05s ease;
            height: 100px; /* height:auto can't seem to be animated currently; search for calc-size(auto) for details */
            overflow: hidden;
        }
        .situation-buttons {
            display: flex;
            flex-direction: row;
            gap: 6px;
        }
        .situation-bet {
            display: flex;
            flex-direction: column;
            gap: 6px;
            transition: height 0.05s ease;
            height: 100px; /* height:auto can't seem to be animated currently; search for calc-size(auto) for details */
            overflow: hidden;
        }
        .situation-inputs {
            display: flex;
            flex-direction: row;
            gap: 6px;
            height: 44px;
        }
        .situation-chance-label {
            font-size: 0.8em;
            text-align: center;
        }
        .option-button {
            flex-grow: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 44px;
            border-radius: 6px;
            color: #fff;
        }
        .option-chance {
            flex: 0 0 3em;
        }
        .chance-svg {
            display: block;
            width: 3em;
            height: 1.5em;
        }
        .chance-svg path {
            fill: none;
            stroke-width: 10;
        }
        .chance-svg text {
            fill: #000;
            stroke: #000;
            font-size: 30px;
            text-anchor: middle;
            alignment-baseline: baseline;
        }
        .option-button.yes {
            background-color: var(--yes-button-background-color);
        }
        .option-button.no {
            background-color: var(--no-button-background-color);
        }
        .icon {
            font-family: "Noto Emoji", sans-serif;
            font-size: 3em;
            font-weight: normal;
        }
        .height-0 {
            height: 0;
        }
        .situation-bet-field {
            flex-grow: 1;
            min-height: 44px;
            border-radius: 6px;
        }
        .situation-bet-slider {
            flex-grow: 1;
            min-height: 44px;
        }
        .situation-total-bet {
            color: var(--hint-color);
        }
    </style>
</head>
<body>
<div id="content">

</div>
<script>

    function situationBetUIOn(situation, optionId) {
        const elSituationOptions = document.getElementById(situation.id + "-options");
        elSituationOptions.classList.add("height-0");
        const elSituationBet = document.getElementById(situation.id + "-bet");
        elSituationBet.classList.remove("height-0");
        const option = situation.options.find(o => o.id === optionId);
        const elSituationBetButton = document.getElementById(situation.id + "-bet-button");
        const elButtonClone = elSituationBetButton.cloneNode(true);
        elSituationBetButton.parentNode.replaceChild(elButtonClone, elSituationBetButton);
        elButtonClone.className = "option-button " + option.cssClass;
        elButtonClone.innerHTML = option.title;
        elButtonClone.addEventListener("click", () => situationBetUIOff(situation));
    }

    function situationBetUIOff(situation) {
        const elSituationOptions = document.getElementById(situation.id + "-options");
        elSituationOptions.classList.remove("height-0");
        const elSituationBet = document.getElementById(situation.id + "-bet");
        elSituationBet.classList.add("height-0");
    }

    function arcColour(chance) {
        return "hsl(" + chance * 90 + "deg 75% 50%)";
    }

    function generateSituationBlock(situation) {

        const elSituation = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituation.setAttribute("id", situation.id + "-block");
        elSituation.classList.add("situation-block");

        const elSituationDescription = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationDescription.classList.add("situation-description");

        const elSituationIcon = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationIcon.innerHTML = situation.icon;
        elSituationIcon.classList.add("icon");
        elSituationDescription.append(elSituationIcon);

        const elSituationTitle = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationTitle.innerHTML = situation.title;
        elSituationTitle.classList.add("situation-title");
        elSituationDescription.append(elSituationTitle);

        const elSituationChance = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationChance.classList.add("option-chance");
        const svgSituationChance = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        svgSituationChance.classList.add("chance-svg");
        svgSituationChance.setAttribute("viewBox", "0 0 110 60");

        const svgChancePath = document.createElementNS("http://www.w3.org/2000/svg", "path");
        svgChancePath.setAttribute("d", "M 5 55 A 50 50 0 0 1 105 55");
        svgChancePath.setAttribute("stroke", arcColour(situation.chance));
        const fullArc = Math.ceil(50 * Math.PI);
        const arcA = fullArc * situation.chance;
        const arcB = fullArc - arcA;
        svgChancePath.setAttribute("stroke-dasharray", arcA + " " + arcB);
        svgSituationChance.appendChild(svgChancePath);

        const svgChanceText = document.createElementNS("http://www.w3.org/2000/svg", "text");
        svgChanceText.innerHTML = Math.round(100 * situation.chance) + "%";
        svgChanceText.setAttribute("x", "55");
        svgChanceText.setAttribute("y", "55");
        svgSituationChance.appendChild(svgChanceText);

        elSituationChance.append(svgSituationChance);
        const elSituationChanceLabel = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationChanceLabel.classList.add("situation-chance-label");
        elSituationChanceLabel.innerHTML = "chance";
        elSituationChance.append(elSituationChanceLabel);
        elSituationDescription.append(elSituationChance);

        elSituation.append(elSituationDescription);

        const elSituationOptions = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationOptions.classList.add("situation-options");
        elSituationOptions.setAttribute("id", situation.id + "-options");

        const elSituationButtons = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationButtons.classList.add("situation-buttons");
        elSituationButtons.setAttribute("id", situation.id + "-buttons");
        for (let option of situation.options) {
            const elSituationOption = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
            elSituationOption.classList.add("option-button");
            elSituationOption.classList.add(option.cssClass);
            elSituationOption.innerHTML = option.title;
            elSituationOption.addEventListener("click", () => situationBetUIOn(situation, option.id));
            elSituationButtons.append(elSituationOption);
        }
        elSituationOptions.append(elSituationButtons);

        const elSituationTotalBet = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationTotalBet.setAttribute("class", "situation-total-bet");
        elSituationTotalBet.innerHTML = situation.currentTotalBet + " Bet";
        elSituationOptions.append(elSituationTotalBet);

        elSituation.append(elSituationOptions);

        const elSituationBet = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationBet.setAttribute("id", situation.id + "-bet");
        elSituationBet.classList.add("situation-bet");
        elSituationBet.classList.add("height-0");

        const elSituationInputs = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationInputs.classList.add("situation-inputs");

        const elSituationBetField = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
        elSituationBetField.setAttribute("id", situation.id + "-bet-field")
        elSituationBetField.setAttribute("type", "number");
        elSituationBetField.setAttribute("min", "0");
        elSituationBetField.setAttribute("step", "1");
        elSituationBetField.classList.add("situation-bet-field")
        elSituationInputs.append(elSituationBetField);

        const elSituationBetSlider = document.createElementNS("http://www.w3.org/1999/xhtml", "input");
        elSituationBetSlider.setAttribute("id", situation.id + "-bet-slider");
        elSituationBetSlider.setAttribute("type", "range");
        elSituationBetSlider.classList.add("situation-bet-slider")
        elSituationInputs.append(elSituationBetSlider);

        elSituationBet.append(elSituationInputs);

        const elSituationBetButton = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
        elSituationBetButton.setAttribute("id", situation.id + "-bet-button");
        elSituationBetButton.classList.add("option-button");
        elSituationBet.append(elSituationBetButton);

        elSituation.append(elSituationBet);

        return elSituation;
    }

    const situations = [
        {
            id: "ceasefire-UA-RU-2025",
            title: "Ceasefire between UA & RU by 2025",
            description: "Will there be a ceasefire between Ukraine and Russia by January 1st, 2025?",
            icon: '💣',
            chance: 0.17,
            currentTotalBet: "$538.24m",
            options: [
                {
                    id: "yes",
                    title: "Bet Yes",
                    cssClass: "yes"
                },
                {
                    id: "no",
                    title: "Bet No",
                    cssClass: "no"
                },
            ]
        },
        {
            id: "trump-biden",
            title: "Trump vs others",
            description: "Will Trump win the 2024 elections?",
            icon: '💣',
            chance: 0.63,
            currentTotalBet: "$315.85m",
            options: [
                {
                    id: "yes",
                    title: "Bet Yes",
                    cssClass: "yes"
                },
                {
                    id: "no",
                    title: "Bet No",
                    cssClass: "no"
                },
            ]
        },
        {
            id: "ceasefire-Israel-HAMAS-2025",
            title: "Ceasefire between Israel & HAMAS by 2025",
            description: "Will there be a ceasefire between Ukraine and Russia by January 1st, 2025?",
            icon: '💣',
            chance: 0.39,
            currentTotalBet: "$157.14m",
            options: [
                {
                    id: "yes",
                    title: "Bet Yes",
                    cssClass: "yes"
                },
                {
                    id: "no",
                    title: "Bet No",
                    cssClass: "no"
                },
            ]
        }
    ];
    for (let s of situations) {
        const elBlock = generateSituationBlock(s);
        document.getElementById("content").append(elBlock);
    }
</script>
</body>
</html>
